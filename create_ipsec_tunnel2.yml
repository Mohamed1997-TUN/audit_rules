---
- name: Configure FortiGate IPSec VPN
  hosts: fortigate
  gather_facts: false
  vars:
    # VPN Configuration Variables
    vpn:
      name: "from_200_to_129"
      interface: "port1"
      peertype: "any"
      local_interface: "port2"
      local_subnet: "10.10.10.0 255.255.255.0"
      remote_subnet: "20.20.20.0 255.255.255.0"
      remote_gw: "192.168.11.140"
      psk: "test12345"
      comment: "VPN: from 200 to 129 [Created by Ansible]"
      proposal: "des-md5"
      phase2_proposal: "des-md5"

  tasks:
    # Task 1: Safely display VPN variables (without recursion)
    - name: Display VPN configuration parameters
      ansible.builtin.debug:
        msg: |
          VPN Configuration:
          - Name: {{ vpn.name }}
          - External Interface: {{ vpn.interface }}
          - Local Interface: {{ vpn.local_interface }}
          - Local Subnet: {{ vpn.local_subnet }}
          - Remote Subnet: {{ vpn.remote_subnet }}
          - Remote Gateway: {{ vpn.remote_gw }}
          - Encryption: {{ vpn.proposal }} (Phase1) / {{ vpn.phase2_proposal }} (Phase2)
          - Comment: {{ vpn.comment }}

    # Task 2: Generate config file from template
    - name: Generate FortiGate configuration
      ansible.builtin.template:
        src: "template/ipsectunnel.j2"
        dest: "/tmp/fortigate_vpn_{{ vpn.name }}.cfg"
      delegate_to: localhost
      register: config_generation

    # Task 3: Display generated config (for verification)
    - name: Show generated configuration
      ansible.builtin.debug:
        var: config_generation.content | b64decode
      when: config_generation.changed

    # Task 4: Push configuration to FortiGate
    - name: Apply VPN configuration
      ansible.builtin.raw: |
        config vpn ipsec phase1-interface
          edit "{{ vpn.name }}"
            set interface "{{ vpn.interface }}"
            set peertype {{ vpn.peertype }}
            set proposal {{ vpn.proposal }}
            set remote-gw {{ vpn.remote_gw }}
            set psksecret {{ vpn.psk }}
            set comments "{{ vpn.comment }}"
          next
        end

        config vpn ipsec phase2-interface
          edit "{{ vpn.name }}"
            set phase1name "{{ vpn.name }}"
            set proposal {{ vpn.phase2_proposal }}
            set src-subnet {{ vpn.local_subnet }}
            set dst-subnet {{ vpn.remote_subnet }}
          next
        end

        config firewall policy
          edit 0
            set name "{{ vpn.name }}_outbound"
            set srcintf "{{ vpn.local_interface }}"
            set dstintf "{{ vpn.name }}"
            set srcaddr all
            set dstaddr all
            set action accept
            set schedule always
            set service ALL
          next
          edit 0
            set name "{{ vpn.name }}_inbound"
            set srcintf "{{ vpn.name }}"
            set dstintf "{{ vpn.local_interface }}"
            set srcaddr all
            set dstaddr all
            set action accept
            set schedule always
            set service ALL
          next
        end

        config router static
          edit 0
            set dst {{ vpn.remote_subnet }}
            set device "{{ vpn.name }}"
          next
        end
      register: config_push
      changed_when: "'success' in config_push.stdout"

    # Task 5: Save configuration permanently
    - name: Save FortiGate configuration
      ansible.builtin.raw: "execute cfg save"
      when: config_push is changed
