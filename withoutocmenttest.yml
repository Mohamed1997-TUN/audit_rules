---
- name: Get and convert FortiGate firewall rules without comments
  hosts: fortigate
  gather_facts: no
  connection: local

  vars:
    vdom: "root"
    fortigate_token: "Qphsdnt9gNG4k9HNb0pd6HmkdpH4m8"  # Replace with your actual token
    scp_password: "96808538"
    local_machine_ip: "192.168.11.216"
    local_machine_user: "dhia"
    local_machine_path: "/home/dhia/Desktop/createfirewall/audit_rules"
    output_dir: "/home/dhia/Desktop/createfirewall/audit_rules"
    output_file: "{{ output_dir }}/rules_without_comments.html"

  tasks:

    - name: Ensure output directory exists
      file:
        path: "{{ output_dir }}"
        state: directory
        mode: '0755'
      delegate_to: localhost

    - name: Get firewall policy stats from FortiGate
      uri:
        url: "http://{{ ansible_host }}/api/v2/cmdb/firewall/policy?vdom={{ vdom }}"
        method: GET
        headers:
          Authorization: "Bearer {{ fortigate_token }}"
        return_content: yes
        status_code: 200
        validate_certs: no
      register: policy_response

    - name: Filter rules without comments
      set_fact:
        rules_without_comments: >-
          {{
            policy_response.json.results | selectattr('comments', 'equalto', '') | list
          }}

    - name: Save rules without comments to HTML file
      copy:
        content: |
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Firewall Rules Without Comments</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 20px; }
              table { border-collapse: collapse; width: 100%; }
              th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
              th { background-color: #f2f2f2; }
            </style>
          </head>
          <body>
            <h1>Firewall Rules Without Comments</h1>
            {% if rules_without_comments | length > 0 %}
            <table>
              <tr>
                <th>ID</th><th>Name</th><th>Src Intf</th><th>Dst Intf</th>
                <th>Src Addr</th><th>Dst Addr</th><th>Action</th><th>Service</th>
              </tr>
              {% for rule in rules_without_comments %}
              <tr>
                <td>{{ rule.policyid }}</td>
                <td>{{ rule.name }}</td>
                <td>{{ rule.srcintf | map(attribute='name') | join(', ') }}</td>
                <td>{{ rule.dstintf | map(attribute='name') | join(', ') }}</td>
                <td>{{ rule.srcaddr | map(attribute='name') | join(', ') }}</td>
                <td>{{ rule.dstaddr | map(attribute='name') | join(', ') }}</td>
                <td>{{ rule.action }}</td>
                <td>{{ rule.service | map(attribute='name') | join(', ') }}</td>
              </tr>
              {% endfor %}
            </table>
            {% else %}
            <p>✅ All firewall rules have comments.</p>
            {% endif %}
          </body>
          </html>
        dest: "{{ output_file }}"
      delegate_to: localhost

    - name: Read the content of the generated HTML file
      slurp:
        src: "{{ output_file }}"
      register: html_content_base64
      delegate_to: localhost

    - name: Decode and write HTML content again (optional safety write)
      copy:
        content: "{{ html_content_base64.content | b64decode }}"
        dest: "{{ output_file }}"
      delegate_to: localhost

    - name: Ensure the target directory exists on local machine
      shell: >
        sshpass -p '{{ scp_password }}'
        ssh -o StrictHostKeyChecking=no {{ local_machine_user }}@{{ local_machine_ip }}
        "mkdir -p {{ local_machine_path }}"
      delegate_to: localhost

    - name: Copy the file from AWX controller to local machine
      command: >
        sshpass -p '{{ scp_password }}'
        scp -o StrictHostKeyChecking=no {{ output_file }}
        {{ local_machine_user }}@{{ local_machine_ip }}:{{ local_machine_path }}/
      delegate_to: localhost

    - name: Summary of Rules Without Comments
      debug:
        msg: >
          ✅ Scan complete. Found {{ rules_without_comments | length }} rule(s) without comments.
          Report saved to {{ output_file }} and copied to {{ local_machine_path }}.
