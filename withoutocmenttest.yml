---
- name: Get FortiGate firewall rules without comments
  hosts: fortigate
  gather_facts: no
  connection: local

  vars:
    vdom: "root"
    output_file: "/home/dhia/Desktop/createfirewall/audit_rules/rules_without_comments.txt"
    fortigate_token: "Qphsdnt9gNG4k9HNb0pd6HmkdpH4m8"  # Inline for now
    scp_password: "96808538"
    local_machine_ip: "192.168.11.209"
    local_machine_user: "dhia"
    local_machine_path: "/home/dhia/Desktop/createfirewall/audit_rules"
    output_dir: "/home/dhia/Desktop/createfirewall"
    output_file: "{{ output_dir }}/rules_without_comments.txt"
    temp_file_path: "/tmp/hello_awx.txt"

  tasks:

    - name: Login to FortiGate and get session cookie
      uri:
        url: "http://{{ inventory_hostname }}/logincheck"
        method: POST
        body: "username={{ ansible_user }}&secretkey={{ ansible_password }}"
        body_format: form-urlencoded
        return_content: yes
        validate_certs: no
      register: login_response

    - name: Extract session cookie
      set_fact:
        session_cookie: "{{ login_response.set_cookie.split(';')[0] }}"

    - name: Get firewall policies
      uri:
        url: "http://{{ inventory_hostname }}/api/v2/cmdb/firewall/policy?vdom={{ vdom }}"
        method: GET
        headers:
          Cookie: "{{ session_cookie }}"
        return_content: yes
        validate_certs: no
      register: policies_response

    - name: Filter rules without comments
      set_fact:
        rules_without_comments: >-
          {{
            policies_response.json.results
            | selectattr('comments', 'equalto', '') 
            | list
          }}

    - name: Save rules without comments to file
      copy:
        content: |
          {% for rule in rules_without_comments %}
          ID: {{ rule.policyid }}
          Name: {{ rule.name }}
          Src: {{ rule.srcintf | map(attribute='name') | join(', ') }}
          Dst: {{ rule.dstintf | map(attribute='name') | join(', ') }}
          Source Addr: {{ rule.srcaddr | map(attribute='name') | join(', ') }}
          Dest Addr: {{ rule.dstaddr | map(attribute='name') | join(', ') }}
          Action: {{ rule.action }}
          Service: {{ rule.service | map(attribute='name') | join(', ') }}
          Comment: {{ rule.comments | default('') }}
          ------------------------
          {% endfor %}
        dest: "{{ output_file }}"
        mode: '0644'
      delegate_to: localhost


    - name: Show result path
      debug:
        msg: "Firewall rules without comments saved to {{ output_file }}"


    - name: Ensure the target directory exists on local machine
      shell: >
        sshpass -p {{ scp_password }}
        ssh -o StrictHostKeyChecking=no {{ local_machine_user }}@{{ local_machine_ip }}
        "mkdir -p {{ local_machine_path }}"
      delegate_to: localhost

    - name: Copy the file from AWX controller to local machine
      command: >
        sshpass -p {{ scp_password }}
        scp -o StrictHostKeyChecking=no {{ output_file }}
        {{ local_machine_user }}@{{ local_machine_ip }}:{{ local_machine_path }}/
      delegate_to: localhost

    - name: Summary of Rules Without Comments
      debug:
        msg: >
          âœ… Scan complete. Found {{ rules_without_comments | length }} rule(s) without comments.
          Report saved to {{ output_file }} and copied to {{ local_machine_path }}.